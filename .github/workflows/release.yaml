name: Release
on:
  push:
    tags:
      - '*.*.*'        # 1.2.3

jobs:
  publish:
    strategy:
      # see: https://docs.github.com/ja/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners
      fail-fast: false
      matrix:
        include:
          - os: windows-2025
            rid: win-x64
            archive_name: DotfilesLinker_win_amd64.zip
          - os: windows-11-arm
            rid: win-arm64
            archive_name: DotfilesLinker_win_arm64.zip
          - os: ubuntu-24.04
            rid: linux-x64
            archive_name: DotfilesLinker_linux_amd64.tar.gz
          - os: ubuntu-24.04-arm
            rid: linux-arm64
            archive_name: DotfilesLinker_linux_arm64.tar.gz
          - os: macos-13
            rid: osx-x64
            archive_name: DotfilesLinker_darwin_amd64.tar.gz
          - os: macos-15
            rid: osx-arm64
            archive_name: DotfilesLinker_darwin_arm64.tar.gz
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    timeout-minutes: 20
    steps:
      - name: Verify tag is pure semver x.y.z
        shell: bash
        env:
          TAG: ${{ github.ref_name }}
        run: |
          if [[ ! "${TAG}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Tag '${TAG}' is not a pure semantic version (x.y.z)."
            exit 1
          fi
          echo "Tag $TAG validated."
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 9.0.x
      - name: dotnet publish (Native AOT)
        shell: bash
        env:
          TAG: ${{ github.ref_name }}
        run: dotnet publish -c Release -r ${{ matrix.rid }} -p:Version=${TAG} --artifacts-path ./artifacts
      - name: Create archive (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: Compress-Archive -Path ./artifacts/publish/DotfilesLinker/release_${{ matrix.rid }}/* -DestinationPath ${{ matrix.archive_name }}
      - name: Create archive (Linux/macOS)
        if: ${{ runner.os != 'Windows' }}
        shell: bash
        run: tar -czvf ${{ matrix.archive_name }} -C ./artifacts/publish/DotfilesLinker/release_${{ matrix.rid }} .
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ matrix.archive_name }}
          retention-days: 1

  release:
    needs: publish
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    timeout-minutes: 5
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: ./artifacts
          merge-multiple: true
          error-on-not-found: false
      - name: List artifacts
        shell: bash
        run: |
          echo "Downloaded artifacts:"
          find ./artifacts -type f | sort

          # Ensure we have artifacts to release
          if [ -z "$(find ./artifacts -type f)" ]; then
            echo "::error::No artifacts found. Aborting release creation."
            exit 1
          fi
      - name: Generate checksums and signature
        shell: bash
        env:
          TAG: ${{ github.ref_name }}
        run: |
          # Create checksums file
          CHECKSUM_FILE="./DotfilesLinker_${TAG}_checksums.txt"

          # Calculate SHA256 checksums for all artifacts
          cd ./artifacts
          sha256sum * > "${CHECKSUM_FILE}"

          echo "Generated checksums file:"
          cat "${CHECKSUM_FILE}"
      - name: Create GitHub Release via gh
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          # Create release with all artifacts
          gh release create "$TAG" --title "v$TAG" --generate-notes --fail-on-no-commits ./artifacts/*
